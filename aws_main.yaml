---
 - hosts: AWX
   become: yes
   become_user: "{{ username }}"
   gather_facts: no
   tasks:

    - name: Create namespace
      shell: chdir=/home/{{ username }} kubectl create ns {{ namespace }} 


    - name: Install redis helm chart
      shell: |
         - helm repo add bitnami https://charts.bitnami.com/bitnami
         - helm install -n entando redis bitnami/redis --values values_aws.yaml

    - name: Install solr helm chart
      shell: |
         - helm repo add apache-solr https://solr.apache.org/charts
         - helm repo update
         - kubectl create -f https://solr.apache.org/operator/downloads/crds/v0.5.0/all-with-dependencies.yaml
         - helm install -n{{ namespace }}  solr-operator apache-solr/solr-operator --version 0.5.0

    - name: Install solr helm chart
      shell: |
        echo -e "
        apiVersion: solr.apache.org/v1beta1
        kind: SolrCloud
        metadata:
          name: solr
          namespace: {{ namespace }}
        spec:
          solrAddressability:
            external:
              domainName:{{ HOST }} 
              method: Ingress
              useExternalAddress: true
          customSolrKubeOptions:
            podOptions:
              resources:
                limits:
                  memory: 3Gi
                  cpu: 2000m
                requests:
                  cpu: 700m
                  memory: 3Gi
          dataStorage:
            persistent:
              pvcTemplate:
                spec:
                  resources:
                    requests:
                      storage: 20Gi
              reclaimPolicy: Delete
          replicas: 3
          solrImage:
            repository: entando/entando-solr
            tag: '8'
          solrJavaMem: -Xms2048M -Xmx2048M
          updateStrategy:
            method: StatefulSet
          zookeeperRef:
            provided:
              chroot: /explore
              image:
                pullPolicy: IfNotPresent
                repository: pravega/zookeeper
                tag: 0.2.13
              persistence:
                reclaimPolicy: Delete
                spec:
                  accessModes:
                    - ReadWriteOnce
                  resources:
                    requests:
                      storage: 2Gi
              replicas: 3
              zookeeperPodPolicy:
                resources:
                  limits:
                    memory: 500Mi
                  requests:
                    cpu: 250m
                    memory: 500Mi" | kubectl apply -f -

    - name: Install solr helm chart
      shell: curl "http://{{ namespace }}-solr-solrcloud{{ HOST }}/solr/admin/collections?action=CREATE&name=entando&numShards=1&replicationFactor=3&maxShardsPerNode=2&collection.configName=_default"


    - name: Install solr helm chart
      shell: kubectl apply -f https://raw.githubusercontent.com/entando-k8s/entando-k8s-operator-bundle/v{{ ent_version }}/manifests/k8s-116-and-later/namespace-scoped-deployment/cluster-resources.yaml

    - name: Install solr 
      shell: |
       - echo -e "
        {{ csv }}" | kubectl apply -f -

    - name: Apply redi and solr configuration on EntandoApp
      shell: |
       - echo -e "
        apiVersion: entando.org/v1
        kind: EntandoApp
        metadata:
          namespace: entando
          name: test-redis
        spec:
          environmentVariables:
          - name: REDIS_ACTIVE 
            value: 'true'
          - name: REDIS_ADDRESSES 
            value: 'redis-node-0.redis-headless.{{ namespace }}.svc.cluster.local:26379,redis-node-1.redis-headless.{{ namespace }}.svc.cluster.local:26379'
         - name: SOLR_ADDRESS
           value: 'http://{{ namespace }}-solr-solrcloud.{{ HOST }}/solr'
        dbms: postgresql
        ingressHostName: {{ HOST }}
        standardServerImage: wildfly
        replicas: 1" | kubectl apply -f -

    - name: Wait Entando is ready
      shell: while [[ $(kubectl get pods -l entando.org/entando-resource-kind=EntandoPlugin -n {{ namespace }} -o 'jsonpath={..status.conditions[?(@.type=="Ready")].status}') != "True" ]]; do echo "waiting for pod" && sleep 1 ; done